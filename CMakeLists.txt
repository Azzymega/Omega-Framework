cmake_minimum_required(VERSION 3.25)
project(librnt)
set(CMAKE_CXX_FLAGS -static-libgcc)
set(CMAKE_CXX_FLAGS -static-libstdc++)
set(CMAKE_CXX_STANDARD 17)
set ( CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON )
add_executable(asmcmplr asmcmplr/cmplr.cpp asmcmplr/cmplr.h libldr/ldr.h libldr/ldr.cpp)
add_executable(bootstrap bootstrap/bootstrap.cpp bootstrap/bootstrap.h librnt/microcode.cpp)
add_executable(asmjit asmjit/main.cpp)
add_library( ldr SHARED libldr/ldr.cpp libldr/ldr.h)
add_library( sal SHARED libsal/BasicAbstractions/SystemCall.cpp libsal/BasicAbstractions/SystemCall.h libsal/BasicAbstractions/SoftwareAbstractionLayer.cpp libsal/BasicAbstractions/SoftwareAbstractionLayer.h libsal/SystemCalls/PrintSystemCall.cpp libsal/SystemCalls/PrintSystemCall.h libsal/SystemCalls/GetSystemCall.cpp libsal/SystemCalls/GetSystemCall.h libsal/Manager/SystemCallManager.cpp libsal/Manager/SystemCallManager.h libsal/Utility/AbstractData.cpp libsal/Utility/AbstractData.h)
add_library( rnt SHARED librnt/cpu.cpp librnt/cpu.h librnt/microcode.cpp librnt/microcode.h libldr/ldr.h)
add_library( wrt SHARED libwrt/wrtr.cpp libwrt/wrtr.h)
add_library( cmp SHARED asmcmplr/image.cpp asmcmplr/image.h)
add_library( jit SHARED libjit/cmplr.cpp libjit/cmplr.h libjit/image.cpp libjit/image.h libjit/cmplr.h)
add_library( tkn SHARED libcmp/token.cpp libcmp/token.h libcmp/tokenFactory.cpp libcmp/tokenFactory.h libtkn/mov.cpp libtkn/mov.h libtkn/cmv.cpp libtkn/cmv.h libtkn/hlt.cpp libtkn/hlt.h libtkn/jmp.cpp libtkn/jmp.h libtkn/add.cpp libtkn/add.h libtkn/sub.cpp libtkn/sub.h)
target_link_libraries(asmcmplr PUBLIC ldr)
target_link_libraries(asmcmplr PUBLIC cmp)
target_link_libraries(jit PUBLIC ldr)
target_link_libraries(jit PUBLIC wrt)
target_link_libraries(jit PUBLIC tkn)
target_link_libraries(jit PUBLIC rnt)
target_link_libraries(asmjit PUBLIC jit)
target_link_libraries(asmcmplr PUBLIC wrt)
target_link_libraries(asmcmplr PUBLIC rnt)
target_link_libraries(bootstrap PUBLIC rnt)
target_link_libraries(asmcmplr PUBLIC tkn)
target_link_libraries(bootstrap PUBLIC ldr)
target_link_libraries(rnt PUBLIC sal)